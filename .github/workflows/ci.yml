name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ['v*.*.*']  # Only deploy production on version tags
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, closed]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Clean install to fix Rollup native bindings
        run: |
          rm -rf node_modules package-lock.json
          npm install --force

      - name: Build project
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
          retention-days: 1

  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist
          
      - name: Deploy to preview environment
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "dist/*"
          target: "${{ secrets.FTP_TARGET }}/preview/pr-${{ github.event.number }}"
          
      - name: Comment on PR with preview URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const domain = process.env.DOMAIN || 'jasonmcalpin.com';
            const previewUrl = `https://${domain}/preview/pr-${context.issue.number}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment is ready! \n\n[View Preview](${previewUrl})`
            });
        env:
          DOMAIN: 'jasonmcalpin.com'  # Replace with your actual domain

  deploy-production:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist
          
      - name: Deploy to production
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "dist/*"
          target: ${{ secrets.FTP_TARGET }}
          
  cleanup-preview:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Remove preview deployment
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            rm -rf ${{ secrets.FTP_TARGET }}/preview/pr-${{ github.event.number }}
